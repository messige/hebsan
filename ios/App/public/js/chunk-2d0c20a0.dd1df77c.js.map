{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js"],"names":["rippleEffectCss","RippleEffect","hostRef","this","type","x","y","Promise","resolve","rect","el","getBoundingClientRect","width","height","hypotenuse","Math","sqrt","maxDim","max","maxRadius","unbounded","PADDING","initialSize","floor","INITIAL_ORIGIN_SCALE","finalScale","posX","left","posY","top","styleX","styleY","moveX","moveY","div","document","createElement","classList","add","style","setProperty","container","shadowRoot","appendChild","setTimeout","removeRipple","mode","role","class","ripple","remove"],"mappings":"gHAAA,qFAGA,MAAMA,EAAkB,o2BAElBC,EAAe,MACnB,YAAYC,GACV,eAAiBC,KAAMD,GAUvBC,KAAKC,KAAO,UAQd,gBAAgBC,EAAGC,GACjB,OAAO,IAAIC,QAAQC,IACjB,eAAS,KACP,MAAMC,EAAON,KAAKO,GAAGC,wBACfC,EAAQH,EAAKG,MACbC,EAASJ,EAAKI,OACdC,EAAaC,KAAKC,KAAKJ,EAAQA,EAAQC,EAASA,GAChDI,EAASF,KAAKG,IAAIL,EAAQD,GAC1BO,EAAYhB,KAAKiB,UAAYH,EAASH,EAAaO,EACnDC,EAAcP,KAAKQ,MAAMN,EAASO,GAClCC,EAAaN,EAAYG,EAC/B,IAAII,EAAOrB,EAAII,EAAKkB,KAChBC,EAAOtB,EAAIG,EAAKoB,IAChB1B,KAAKiB,YACPM,EAAe,GAARd,EACPgB,EAAgB,GAATf,GAET,MAAMiB,EAASJ,EAAqB,GAAdJ,EAChBS,EAASH,EAAqB,GAAdN,EAChBU,EAAgB,GAARpB,EAAcc,EACtBO,EAAiB,GAATpB,EAAee,EAC7B,eAAU,KACR,MAAMM,EAAMC,SAASC,cAAc,OACnCF,EAAIG,UAAUC,IAAI,iBAClB,MAAMC,EAAQL,EAAIK,MAClBA,EAAMV,IAAME,EAAS,KACrBQ,EAAMZ,KAAOG,EAAS,KACtBS,EAAM3B,MAAQ2B,EAAM1B,OAASS,EAAc,KAC3CiB,EAAMC,YAAY,gBAAiB,GAAGf,GACtCc,EAAMC,YAAY,kBAAmB,GAAGR,QAAYC,OACpD,MAAMQ,EAAYtC,KAAKO,GAAGgC,YAAcvC,KAAKO,GAC7C+B,EAAUE,YAAYT,GACtBU,WAAW,KACTpC,EAAQ,KACNqC,EAAaX,MAEd,WAKX,gBACE,MAAqB,cAAd/B,KAAKC,KAEd,SACE,MAAM0C,EAAO,eAAW3C,MACxB,OAAQ,cAAD,CAAG,OAAM,CAAE4C,KAAM,eAAgBC,MAAO,CAC3C,CAACF,IAAO,EACR,UAAa3C,KAAKiB,aAGxB,SAAW,OAAO,eAAWjB,QAEzB0C,EAAgBI,IACpBA,EAAOZ,UAAUC,IAAI,YACrBM,WAAW,KACTK,EAAOC,UACN,MAEC7B,EAAU,GACVG,EAAuB,GAC7BvB,EAAasC,MAAQvC","file":"js/chunk-2d0c20a0.dd1df77c.js","sourcesContent":["import { r as registerInstance, f as readTask, c as writeTask, h, i as getElement, H as Host } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\n\nconst rippleEffectCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{transform:translate(var(--translate-end)) scale(var(--final-scale, 1));animation:150ms fadeOutAnimation forwards}@keyframes rippleAnimation{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:scale(1)}to{transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes fadeInAnimation{from{animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeOutAnimation{from{animation-timing-function:linear;opacity:0.16}to{opacity:0}}\";\n\nconst RippleEffect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Sets the type of ripple-effect:\n     *\n     * - `bounded`: the ripple effect expands from the user's click position\n     * - `unbounded`: the ripple effect expands from the center of the button and overflows the container.\n     *\n     * NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\n     * while surfaces for unbounded ripples should have it set to visible.\n     */\n    this.type = 'bounded';\n  }\n  /**\n   * Adds the ripple effect to the parent element.\n   *\n   * @param x The horizontal coordinate of where the ripple should start.\n   * @param y The vertical coordinate of where the ripple should start.\n   */\n  async addRipple(x, y) {\n    return new Promise(resolve => {\n      readTask(() => {\n        const rect = this.el.getBoundingClientRect();\n        const width = rect.width;\n        const height = rect.height;\n        const hypotenuse = Math.sqrt(width * width + height * height);\n        const maxDim = Math.max(height, width);\n        const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\n        const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n        const finalScale = maxRadius / initialSize;\n        let posX = x - rect.left;\n        let posY = y - rect.top;\n        if (this.unbounded) {\n          posX = width * 0.5;\n          posY = height * 0.5;\n        }\n        const styleX = posX - initialSize * 0.5;\n        const styleY = posY - initialSize * 0.5;\n        const moveX = width * 0.5 - posX;\n        const moveY = height * 0.5 - posY;\n        writeTask(() => {\n          const div = document.createElement('div');\n          div.classList.add('ripple-effect');\n          const style = div.style;\n          style.top = styleY + 'px';\n          style.left = styleX + 'px';\n          style.width = style.height = initialSize + 'px';\n          style.setProperty('--final-scale', `${finalScale}`);\n          style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n          const container = this.el.shadowRoot || this.el;\n          container.appendChild(div);\n          setTimeout(() => {\n            resolve(() => {\n              removeRipple(div);\n            });\n          }, 225 + 100);\n        });\n      });\n    });\n  }\n  get unbounded() {\n    return this.type === 'unbounded';\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"presentation\", class: {\n        [mode]: true,\n        'unbounded': this.unbounded\n      } }));\n  }\n  get el() { return getElement(this); }\n};\nconst removeRipple = (ripple) => {\n  ripple.classList.add('fade-out');\n  setTimeout(() => {\n    ripple.remove();\n  }, 200);\n};\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\nRippleEffect.style = rippleEffectCss;\n\nexport { RippleEffect as ion_ripple_effect };\n"],"sourceRoot":""}