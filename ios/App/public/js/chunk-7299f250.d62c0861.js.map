{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js","webpack:///./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js"],"names":["segmentIosCss","segmentMdCss","Segment","hostRef","this","ionChange","ionSelect","ionStyle","didInit","activated","disabled","scrollable","onClick","ev","current","target","previous","checked","value","checkButton","setCheckedClasses","oldValue","undefined","emitStyle","emit","valueAfterGesture","gestureChanged","buttons","getButtons","button","gesture","enable","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","disabledChanged","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","Array","from","querySelectorAll","useRippleEffect","getBoolean","find","root","shadowRoot","ripple","querySelector","x","y","then","remove","forEach","classList","add","clicked","tagName","previousIndicator","getIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","style","setProperty","index","findIndex","next","length","isEnd","isRTL","document","dir","nextIndex","rect","currentX","previousY","top","height","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","mode","class","color","ios","md","segmentButtonIosCss","segmentButtonMdCss","ids","SegmentButton","segmentEl","layout","type","updateStyle","updateState","closest","hasIcon","hasLabel","hasSegmentColor","part","hostContext","selector","createColorClasses","cssClassMap","Object","assign","getClassList","classes","array","isArray","split","filter","c","map","trim","getClassMap","SCHEME","openURL","async","url","direction","animation","test","router","preventDefault","push"],"mappings":"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","file":"js/chunk-7299f250.d62c0861.js","sourcesContent":["import { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement, j as forceUpdate } from './index-e806d1f6.js';\nimport { c as config, b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { p as pointerCoord, a as addEventListener, b as removeEventListener } from './helpers-002e4980.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:stretch;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;user-select:none}:host(.segment-scrollable){justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:flex;position:relative;align-items:stretch;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;user-select:none}:host(.segment-scrollable){justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.didInit = false;\n    this.activated = false;\n    /**\n     * If `true`, the user cannot interact with the segment.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\n     * In addition, this will disable the gesture to drag the indicator between the buttons\n     * in order to swipe to see hidden buttons.\n     */\n    this.scrollable = false;\n    this.onClick = (ev) => {\n      const current = ev.target;\n      const previous = this.checked;\n      this.value = current.value;\n      if (this.scrollable) {\n        if (previous) {\n          this.checkButton(previous, current);\n        }\n        else {\n          this.setCheckedClasses();\n        }\n      }\n      this.checked = current;\n    };\n  }\n  colorChanged(value, oldValue) {\n    /**\n     * If color is set after not having\n     * previously been set (or vice versa),\n     * we need to emit style so the segment-buttons\n     * can apply their color classes properly.\n     */\n    if ((oldValue === undefined && value !== undefined) ||\n      (oldValue !== undefined && value === undefined)) {\n      this.emitStyle();\n    }\n  }\n  valueChanged(value, oldValue) {\n    this.ionSelect.emit({ value });\n    if (oldValue !== '' || this.didInit) {\n      if (!this.activated) {\n        this.ionChange.emit({ value });\n      }\n      else {\n        this.valueAfterGesture = value;\n      }\n    }\n  }\n  disabledChanged() {\n    this.gestureChanged();\n    const buttons = this.getButtons();\n    for (const button of buttons) {\n      button.disabled = this.disabled;\n    }\n  }\n  gestureChanged() {\n    if (this.gesture && !this.scrollable) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  connectedCallback() {\n    this.emitStyle();\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  async componentDidLoad() {\n    this.setCheckedClasses();\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.el,\n      gestureName: 'segment',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev),\n    });\n    this.gesture.enable(!this.scrollable);\n    this.gestureChanged();\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    this.didInit = true;\n  }\n  onStart(detail) {\n    this.activate(detail);\n  }\n  onMove(detail) {\n    this.setNextIndex(detail);\n  }\n  onEnd(detail) {\n    this.setActivated(false);\n    const checkedValidButton = this.setNextIndex(detail, true);\n    detail.event.stopImmediatePropagation();\n    if (checkedValidButton) {\n      this.addRipple(detail);\n    }\n    const value = this.valueAfterGesture;\n    if (value !== undefined) {\n      this.ionChange.emit({ value });\n      this.valueAfterGesture = undefined;\n    }\n  }\n  getButtons() {\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\n  }\n  /**\n   * The gesture blocks the segment button ripple. This\n   * function adds the ripple based on the checked segment\n   * and where the cursor ended.\n   */\n  addRipple(detail) {\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n    if (!useRippleEffect) {\n      return;\n    }\n    const buttons = this.getButtons();\n    const checked = buttons.find(button => button.value === this.value);\n    const root = checked.shadowRoot || checked;\n    const ripple = root.querySelector('ion-ripple-effect');\n    if (!ripple) {\n      return;\n    }\n    const { x, y } = pointerCoord(detail.event);\n    ripple.addRipple(x, y).then(remove => remove());\n  }\n  /*\n   * Activate both the segment and the buttons\n   * due to a bug with ::slotted in Safari\n   */\n  setActivated(activated) {\n    const buttons = this.getButtons();\n    buttons.forEach(button => {\n      if (activated) {\n        button.classList.add('segment-button-activated');\n      }\n      else {\n        button.classList.remove('segment-button-activated');\n      }\n    });\n    this.activated = activated;\n  }\n  activate(detail) {\n    const clicked = detail.event.target;\n    const buttons = this.getButtons();\n    const checked = buttons.find(button => button.value === this.value);\n    // Make sure we are only checking for activation on a segment button\n    // since disabled buttons will get the click on the segment\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n      return;\n    }\n    // If there are no checked buttons, set the current button to checked\n    if (!checked) {\n      this.value = clicked.value;\n      this.setCheckedClasses();\n    }\n    // If the gesture began on the clicked button with the indicator\n    // then we should activate the indicator\n    if (this.value === clicked.value) {\n      this.setActivated(true);\n    }\n  }\n  getIndicator(button) {\n    const root = button.shadowRoot || button;\n    return root.querySelector('.segment-button-indicator');\n  }\n  checkButton(previous, current) {\n    const previousIndicator = this.getIndicator(previous);\n    const currentIndicator = this.getIndicator(current);\n    if (previousIndicator === null || currentIndicator === null) {\n      return;\n    }\n    const previousClientRect = previousIndicator.getBoundingClientRect();\n    const currentClientRect = currentIndicator.getBoundingClientRect();\n    const widthDelta = previousClientRect.width / currentClientRect.width;\n    const xPosition = previousClientRect.left - currentClientRect.left;\n    // Scale the indicator width to match the previous indicator width\n    // and translate it on top of the previous indicator\n    const transform = `translate(${xPosition}px, 0) scaleX(${widthDelta})`;\n    writeTask(() => {\n      // Remove the transition before positioning on top of the previous indicator\n      currentIndicator.classList.remove('segment-button-indicator-animated');\n      currentIndicator.style.setProperty('transform', transform);\n      // Force a repaint to ensure the transform happens\n      currentIndicator.getBoundingClientRect();\n      // Add the transition to move the indicator into place\n      currentIndicator.classList.add('segment-button-indicator-animated');\n      // Remove the transform to slide the indicator back to the button clicked\n      currentIndicator.style.setProperty('transform', '');\n    });\n    this.value = current.value;\n    this.setCheckedClasses();\n  }\n  setCheckedClasses() {\n    const buttons = this.getButtons();\n    const index = buttons.findIndex(button => button.value === this.value);\n    const next = index + 1;\n    // Keep track of the currently checked button\n    this.checked = buttons.find(button => button.value === this.value);\n    for (const button of buttons) {\n      button.classList.remove('segment-button-after-checked');\n    }\n    if (next < buttons.length) {\n      buttons[next].classList.add('segment-button-after-checked');\n    }\n  }\n  setNextIndex(detail, isEnd = false) {\n    const isRTL = document.dir === 'rtl';\n    const activated = this.activated;\n    const buttons = this.getButtons();\n    const index = buttons.findIndex(button => button.value === this.value);\n    const previous = buttons[index];\n    let current;\n    let nextIndex;\n    if (index === -1) {\n      return;\n    }\n    // Get the element that the touch event started on in case\n    // it was the checked button, then we will move the indicator\n    const rect = previous.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    // Get the element that the gesture is on top of based on the currentX of the\n    // gesture event and the Y coordinate of the starting element, since the gesture\n    // can move up and down off of the segment\n    const currentX = detail.currentX;\n    const previousY = rect.top + (rect.height / 2);\n    const nextEl = document.elementFromPoint(currentX, previousY);\n    const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n    const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n    // If the indicator is currently activated then we have started the gesture\n    // on top of the checked button so we need to slide the indicator\n    // by checking the button next to it as we move\n    if (activated && !isEnd) {\n      // Decrease index, move left in LTR & right in RTL\n      if (decreaseIndex) {\n        const newIndex = index - 1;\n        if (newIndex >= 0) {\n          nextIndex = newIndex;\n        }\n        // Increase index, moves right in LTR & left in RTL\n      }\n      else if (increaseIndex) {\n        if (activated && !isEnd) {\n          const newIndex = index + 1;\n          if (newIndex < buttons.length) {\n            nextIndex = newIndex;\n          }\n        }\n      }\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n        current = buttons[nextIndex];\n      }\n    }\n    // If the indicator is not activated then we will just set the indicator\n    // to the element where the gesture ended\n    if (!activated && isEnd) {\n      current = nextEl;\n    }\n    /* tslint:disable-next-line */\n    if (current != null) {\n      /**\n       * If current element is ion-segment then that means\n       * user tried to select a disabled ion-segment-button,\n       * and we should not update the ripple.\n       */\n      if (current.tagName === 'ION-SEGMENT') {\n        return false;\n      }\n      if (previous !== current) {\n        this.checkButton(previous, current);\n      }\n    }\n    return true;\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'segment': true\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'segment-activated': this.activated,\n        'segment-disabled': this.disabled,\n        'segment-scrollable': this.scrollable\n      }) }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"colorChanged\"],\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nSegment.style = {\n  ios: segmentIosCss,\n  md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:flex;position:relative;flex:1 1 auto;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);transform:translate(0, 0);display:flex;position:relative;flex-direction:inherit;flex-grow:1;align-items:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:flex;position:relative;flex-flow:inherit;align-items:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){flex-shrink:0;order:-1;pointer-events:none}::slotted(ion-label){display:block;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{transform-origin:left;position:absolute;opacity:0;box-sizing:border-box;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);transform:var(--indicator-transform);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{transform:none}.segment-button-indicator-animated{transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;flex-basis:0;flex-direction:row;min-width:70px;min-height:28px;transform:translate(0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;transition:160ms opacity ease-in-out;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:flex;position:relative;flex:1 1 auto;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);transform:translate(0, 0);display:flex;position:relative;flex-direction:inherit;flex-grow:1;align-items:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:flex;position:relative;flex-flow:inherit;align-items:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){flex-shrink:0;order:-1;pointer-events:none}::slotted(ion-label){display:block;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{transform-origin:left;position:absolute;opacity:0;box-sizing:border-box;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);transform:var(--indicator-transform);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{transform:none}.segment-button-indicator-animated{transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.segmentEl = null;\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the segment button.\n     */\n    this.disabled = false;\n    /**\n     * Set the layout of the text and icon in the segment.\n     */\n    this.layout = 'icon-top';\n    /**\n     * The type of the button.\n     */\n    this.type = 'button';\n    /**\n     * The value of the segment button.\n     */\n    this.value = 'ion-sb-' + (ids++);\n    this.updateStyle = () => {\n      forceUpdate(this);\n    };\n    this.updateState = () => {\n      if (this.segmentEl) {\n        this.checked = this.segmentEl.value === this.value;\n      }\n    };\n  }\n  connectedCallback() {\n    const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n    if (segmentEl) {\n      this.updateState();\n      addEventListener(segmentEl, 'ionSelect', this.updateState);\n      addEventListener(segmentEl, 'ionStyle', this.updateStyle);\n    }\n  }\n  disconnectedCallback() {\n    const segmentEl = this.segmentEl;\n    if (segmentEl) {\n      removeEventListener(segmentEl, 'ionSelect', this.updateState);\n      removeEventListener(segmentEl, 'ionStyle', this.updateStyle);\n      this.segmentEl = null;\n    }\n  }\n  get hasLabel() {\n    return !!this.el.querySelector('ion-label');\n  }\n  get hasIcon() {\n    return !!this.el.querySelector('ion-icon');\n  }\n  render() {\n    const { checked, type, disabled, hasIcon, hasLabel, layout, segmentEl } = this;\n    const mode = getIonMode(this);\n    const hasSegmentColor = () => segmentEl !== null && segmentEl.color !== undefined;\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'in-segment': hostContext('ion-segment', this.el),\n        'in-segment-color': hasSegmentColor(),\n        'segment-button-has-label': hasLabel,\n        'segment-button-has-icon': hasIcon,\n        'segment-button-has-label-only': hasLabel && !hasIcon,\n        'segment-button-has-icon-only': hasIcon && !hasLabel,\n        'segment-button-disabled': disabled,\n        'segment-button-checked': checked,\n        [`segment-button-layout-${layout}`]: true,\n        'ion-activatable': true,\n        'ion-activatable-instant': true,\n        'ion-focusable': true,\n      } }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : 'false', class: \"button-native\", part: \"native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n        'segment-button-indicator': true,\n        'segment-button-indicator-animated': true\n      } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n  }\n  get el() { return getElement(this); }\n};\nSegmentButton.style = {\n  ios: segmentButtonIosCss,\n  md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}