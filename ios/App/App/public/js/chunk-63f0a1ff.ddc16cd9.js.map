{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","webpack:///./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js","webpack:///./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js"],"names":["spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","style","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","setProperty","toString","handleScrollWhilePulling","ticks","currentTickToShow","forEach","el","i","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","transitionEndAsync","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refreshingSpinner","webkitOverflowScrolling","expectedDuration","transitionEnd","callback","unRegTrans","animationTimeout","opts","passive","ANIMATION_FALLBACK_TIMEOUT","unregister","onTransitionEnd","ev","target","addEventListener","setTimeout","clearTimeout","removeEventListener","refresherIosCss","refresherMdCss","Refresher","hostRef","this","ionRefresh","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","gesture","enable","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","ani","destroy","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","abs","pullAmount","floor","shouldShowRefreshingSpinner","beginRefresh","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","velocityY","onEnd","resetNativeRefresher","disabledChanged","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","async","play","setupiOSNativeRefresher","setupMDNativeRefresher","checkNativeRefresher","getAttribute","console","error","componentOnReady","getScrollElement","backgroundContentEl","close","detail","event","touches","Number","isNaN","setCss","scrollHostScrollTop","cancelable","preventDefault","cancel","complete","bind","delay","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","slot","class","ios","md","RefresherContent","pullingIcon","overflowRefresher","get","hasSpinner","name","paused","icon","lazy","pullingText","innerHTML","refreshingText","HapticEngine","win","window","Capacitor","isPluginAvailable","Plugins","Haptics","getEngine","TapticEngine","options","engine","isCapacitor","toUpperCase","impact","notification","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","selection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact"],"mappings":"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","file":"js/chunk-63f0a1ff.ddc16cd9.js","sourcesContent":["const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-e806d1f6.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-9d5c8ee3.js';\nimport { e as clamp, g as getElementRoot, r as raf } from './helpers-002e4980.js';\nimport { c as createAnimation } from './animation-ede2d71c.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { s as sanitizeDOMString } from './index-9e3fe806.js';\nimport { d as hapticImpact } from './haptic-27b3f981.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation()\n    .duration(1000)\n    .easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' }\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.20, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' }\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' }\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.30, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' }\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n  writeTask(() => {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, 200);\n  writeTask(() => {\n    el.style.setProperty('transition', '0.2s all ease-out');\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n  return new Promise(resolve => {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n  let unRegTrans;\n  let animationTimeout;\n  const opts = { passive: true };\n  const ANIMATION_FALLBACK_TIMEOUT = 500;\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n    unRegTrans = () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:flex;flex-direction:column;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{transform-origin:center;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@keyframes refresher-pop{0%{transform:scale(1);animation-timing-function:ease-in}50%{transform:scale(1.2);animation-timing-function:ease-out}100%{transform:scale(1)}}@keyframes refresher-rotate{from{transform:rotate(0deg)}to{transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:flex;flex-direction:column;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{transform-origin:center;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:flex}ion-refresher.refresher-native .refresher-pulling-icon{transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:flex;border:1px solid #ececec;background:white;box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports (margin-inline-start: 0) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  checkNativeRefresher() {\n    const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        // delay showing the next tick marks until user has pulled 30px\n        const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n        const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n        const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* Pulling */;\n          handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* Pulling */;\n          writeTask(() => {\n            const animationType = getRefresherAnimationType(contentEl);\n            const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n            ev.data.animation = animation;\n            this.scrollEl.style.setProperty('--overflow', 'hidden');\n            animation.progressStart(false, 0);\n            this.ionStart.emit();\n            this.animations.push(animation);\n          });\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation\n            .progressEnd(0, this.progress, 500)\n            .onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n    await contentEl.componentOnReady();\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n    if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    }\n    else {\n      this.gesture = (await import('./index-f49d994d.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 10,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd(),\n      });\n      this.disabledChanged();\n    }\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* _BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n    // TODO: stop gesture\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = (y > 0);\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* Inactive */,\n        'refresher-pulling': this.state === 2 /* Pulling */,\n        'refresher-ready': this.state === 4 /* Ready */,\n        'refresher-refreshing': this.state === 8 /* Refreshing */,\n        'refresher-cancelling': this.state === 16 /* Cancelling */,\n        'refresher-completing': this.state === 32 /* Completing */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n        h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n      h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n      h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n      h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n"],"sourceRoot":""}