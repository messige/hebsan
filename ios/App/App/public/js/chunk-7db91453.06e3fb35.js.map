{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js","webpack:///./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js"],"names":["Route","hostRef","this","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","key","onUpdate","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","queryString","parsePath","undefined","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","removeQueryString","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","async","index","changed","animation","outlet","searchNavNode","componentOnReady","result","setRouteId","element","markVisible","e","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","allparams","matchesDefault","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","beforeLeave","beforeEnter","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","onRoutesChanged","onRedirectChanged","bind","historyDirection","getPath","canProceed","runGuards","writeNavStateRoot","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","unlock","lock","p","toChain","fromChain","beforeEnterHook","beforeLeaveHook","canLeave","canEnter","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","class","color","style","hostContext","selector","closest","createColorClasses","cssClassMap","getClassList","classes","array","isArray","c","getClassMap","SCHEME","openURL","test","router","preventDefault"],"mappings":"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","file":"js/chunk-7db91453.06e3fb35.js","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { k as debounce } from './helpers-002e4980.js';\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\n  const path = segments\n    .filter(s => s.length > 0)\n    .join('/');\n  return '/' + path;\n};\nconst chainToPath = (chain) => {\n  const path = [];\n  for (const route of chain) {\n    for (const segment of route.path) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        path.push(param);\n      }\n      else if (segment !== '') {\n        path.push(segment);\n      }\n    }\n  }\n  return path;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n  let url = generatePath([\n    ...parsePath(root),\n    ...path\n  ]);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url = url + '?' + queryString;\n  }\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\nconst removePrefix = (prefix, path) => {\n  if (prefix.length > path.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n  if (path.length === prefix.length) {\n    return [''];\n  }\n  return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n  let pathname = loc.pathname;\n  if (useHash) {\n    const hash = loc.hash;\n    pathname = (hash[0] === '#')\n      ? hash.slice(1)\n      : '';\n  }\n  const prefix = parsePath(root);\n  const path = parsePath(pathname);\n  return removePrefix(prefix, path);\n};\nconst parsePath = (path) => {\n  if (path == null) {\n    return [''];\n  }\n  const removeQueryString = path.split('?')[0];\n  const segments = removeQueryString.split('/')\n    .map(s => s.trim())\n    .filter(s => s.length > 0);\n  if (segments.length === 0) {\n    return [''];\n  }\n  else {\n    return segments;\n  }\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const path = [];\n    chain.forEach(r => path.push(...r.path));\n    const ids = chain.map(r => r.id);\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await outlet.componentOnReady();\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    outlet = searchNavNode(node);\n    if (outlet) {\n      const id = await outlet.getRouteId();\n      if (id) {\n        node = id.element;\n        id.element = undefined;\n        ids.push(id);\n      }\n      else {\n        break;\n      }\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise(resolve => {\n    window.addEventListener('ionNavWillLoad', resolve, { once: true });\n  });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(QUERY)) {\n    return root;\n  }\n  const outlet = root.querySelector(QUERY);\n  return outlet ? outlet : undefined;\n};\n\nconst matchesRedirect = (input, route) => {\n  const { from, to } = route;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > input.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== input[i]) {\n      return false;\n    }\n  }\n  return from.length === input.length;\n};\nconst routeRedirect = (path, routes) => {\n  return routes.find(route => matchesRedirect(path, route));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let i = 0;\n  for (; i < len; i++) {\n    if (ids[i].toLowerCase() !== chain[i].id) {\n      break;\n    }\n  }\n  return i;\n};\nconst matchesPath = (inputPath, chain) => {\n  const segments = new RouterSegments(inputPath);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const path = chain[i].path;\n    if (path[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of path) {\n        const data = segments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = (matchesDefault)\n    ? matchesDefault === (segments.next() === '')\n    : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, allparams[i])\n    }));\n  }\n  return chain;\n};\nconst mergeParams = (a, b) => {\n  if (!a && b) {\n    return b;\n  }\n  else if (a && !b) {\n    return a;\n  }\n  else if (a && b) {\n    return Object.assign(Object.assign({}, a), b);\n  }\n  return undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  const plainIDs = ids.map(i => i.id);\n  for (const chain of chains) {\n    const score = matchesIDs(plainIDs, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, ids[i] && ids[i].params)\n    }));\n  }\n  return null;\n};\nconst routerPathToChain = (path, chains) => {\n  let match = null;\n  let matches = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesPath(path, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > matches) {\n        matches = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const path of route.path) {\n      if (path[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (path !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(path) {\n    this.path = path.slice();\n  }\n  next() {\n    if (this.path.length > 0) {\n      return this.path.shift();\n    }\n    return '';\n  }\n}\n\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map(el => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')),\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (root, node = root) => {\n  return Array.from(node.children)\n    .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n    .map(el => {\n    const component = readProp(el, 'component');\n    if (component == null) {\n      throw new Error('component missing in ion-route');\n    }\n    return {\n      path: parsePath(readProp(el, 'url')),\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(root, el)\n    };\n  });\n};\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\nconst flattenRouterTree = (nodes) => {\n  const routes = [];\n  for (const node of nodes) {\n    flattenNode([], routes, node);\n  }\n  return routes;\n};\nconst flattenNode = (chain, routes, node) => {\n  const s = chain.slice();\n  s.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n  if (node.children.length === 0) {\n    routes.push(s);\n    return;\n  }\n  for (const sub of node.children) {\n    flattenNode(s, routes, sub);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * By default `ion-router` will match the routes at the root path (\"/\").\n     * That can be changed when\n     *\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    console.debug('[ion-router] router will load');\n    await waitUntilNavNode();\n    console.debug('[ion-router] found nav');\n    await this.onRoutesChanged();\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let path = this.getPath();\n    const canProceed = await this.runGuards(path);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        path = parsePath(canProceed.redirect);\n      }\n      return false;\n    }\n    console.debug('[ion-router] URL changed -> update nav', path, direction);\n    return this.writeNavStateRoot(path, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, processNextHandler => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified URL.\n   *\n   * @param url The url to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(url, direction = 'forward', animation) {\n    if (url.startsWith('.')) {\n      url = (new URL(url, window.location.href)).pathname;\n    }\n    console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n    let path = parsePath(url);\n    let queryString = url.split('?')[1];\n    const canProceed = await this.runGuards(path);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        path = parsePath(canProceed.redirect);\n        queryString = canProceed.redirect.split('?')[1];\n      }\n      else {\n        return false;\n      }\n    }\n    this.setPath(path, direction, queryString);\n    return this.writeNavStateRoot(path, direction, animation);\n  }\n  /**\n   * Go back to previous page in the window.history.\n   */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    console.debug('CURRENT PATH', this.getPath());\n    console.debug('PREVIOUS PATH', this.previousPath);\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = routerIDsToChain(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n      return false;\n    }\n    const path = chainToPath(chain);\n    if (!path) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    console.debug('[ion-router] nav changed -> update URL', ids, path);\n    this.setPath(path, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n    return true;\n  }\n  onRedirectChanged() {\n    const path = this.getPath();\n    if (path && routeRedirect(path, readRedirects(this.el))) {\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n    }\n  }\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    else if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    else {\n      return ROUTER_INTENT_NONE;\n    }\n  }\n  async writeNavStateRoot(path, direction, animation) {\n    if (!path) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = routeRedirect(path, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      this.setPath(redirect.to, direction);\n      redirectFrom = redirect.from;\n      path = redirect.to;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = routerPathToChain(path, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise(r => resolve = r);\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  async runGuards(to = this.getPath(), from = parsePath(this.previousPath)) {\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const toChain = routerPathToChain(to, routes);\n    const fromChain = routerPathToChain(from, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const canEnter = beforeEnterHook ? await beforeEnterHook() : true;\n    if (canEnter === false || typeof canEnter === 'object') {\n      return canEnter;\n    }\n    return true;\n  }\n  async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(path, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    if (changed) {\n      console.debug('[ion-router] route changed', path);\n    }\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setPath(path, direction, queryString) {\n    this.state++;\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n  }\n  getPath() {\n    return readPath(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(path, redirectFromPath) {\n    const from = this.previousPath;\n    const to = generatePath(path);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}