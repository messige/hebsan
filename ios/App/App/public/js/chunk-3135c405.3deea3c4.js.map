{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/ion-text.entry.js","webpack:///./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js"],"names":["textCss","Text","hostRef","this","mode","class","color","style","hostContext","selector","el","closest","createColorClasses","cssClassMap","length","Object","assign","getClassList","classes","undefined","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","async","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push"],"mappings":"gHAAA,wFAIA,MAAMA,EAAU,iDAEVC,EAAO,MACX,YAAYC,GACV,eAAiBC,KAAMD,GAEzB,SACE,MAAME,EAAO,eAAWD,MACxB,OAAQ,cAAD,CAAG,OAAM,CAAEE,MAAO,eAAmBF,KAAKG,MAAO,CACpD,CAACF,IAAO,KACJ,eAAE,OAAQ,SAGtBH,EAAKM,MAAQP,G,kCCjBb,8IAAMQ,EAAc,CAACC,EAAUC,IACG,OAAzBA,EAAGC,QAAQF,GAKdG,EAAqB,CAACN,EAAOO,IACR,kBAAVP,GAAsBA,EAAMQ,OAAS,EAAKC,OAAOC,OAAO,CAAE,aAAa,EAAM,CAAC,aAAaV,IAAU,GAAQO,GAAeA,EAEvII,EAAgBC,IACpB,QAAgBC,IAAZD,EAAuB,CACzB,MAAME,EAAQC,MAAMC,QAAQJ,GAAWA,EAAUA,EAAQK,MAAM,KAC/D,OAAOH,EACJI,OAAOC,GAAU,MAALA,GACZC,IAAID,GAAKA,EAAEE,QACXH,OAAOC,GAAW,KAANA,GAEjB,MAAO,IAEHG,EAAeV,IACnB,MAAMQ,EAAM,GAEZ,OADAT,EAAaC,GAASW,QAAQJ,GAAKC,EAAID,IAAK,GACrCC,GAEHI,EAAS,uBACTC,EAAUC,MAAOC,EAAKC,EAAIC,EAAWC,KACzC,GAAW,MAAPH,GAA0B,MAAXA,EAAI,KAAeH,EAAOO,KAAKJ,GAAM,CACtD,MAAMK,EAASC,SAASC,cAAc,cACtC,GAAIF,EAIF,OAHU,MAANJ,GACFA,EAAGO,iBAEEH,EAAOI,KAAKT,EAAKE,EAAWC,GAGvC,OAAO","file":"js/chunk-3135c405.3deea3c4.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\n\nconst textCss = \":host(.ion-color){color:var(--ion-color-base)}\";\n\nconst Text = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(this.color, {\n        [mode]: true,\n      }) }, h(\"slot\", null)));\n  }\n};\nText.style = textCss;\n\nexport { Text as ion_text };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":""}