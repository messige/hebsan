{"version":3,"file":"js/96767.b9dbd161.js","mappings":"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","sources":["webpack://hebsan/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://hebsan/./node_modules/date-fns/esm/toDate/index.js","webpack://hebsan/./node_modules/date-fns/esm/getYear/index.js","webpack://hebsan/./src/components/vue/CalendariumFeast.vue?8a76","webpack://hebsan/./node_modules/date-fns/esm/getMonth/index.js","webpack://hebsan/./node_modules/date-fns/esm/getDate/index.js","webpack://hebsan/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://hebsan/./node_modules/date-fns/esm/isDate/index.js","webpack://hebsan/./node_modules/date-fns/esm/isValid/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://hebsan/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://hebsan/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://hebsan/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://hebsan/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://hebsan/./node_modules/date-fns/esm/format/index.js","webpack://hebsan/./node_modules/date-fns/esm/addDays/index.js","webpack://hebsan/./node_modules/date-fns/esm/getDay/index.js","webpack://hebsan/./node_modules/date-fns/esm/addWeeks/index.js","webpack://hebsan/./node_modules/date-fns/esm/nextDay/index.js","webpack://hebsan/./node_modules/date-fns/esm/nextSunday/index.js","webpack://hebsan/./node_modules/date-fns/esm/compareDesc/index.js","webpack://hebsan/./src/components/ts/calendarService.ts","webpack://hebsan/./src/components/vue/CalendariumFeast.vue?bb01","webpack://hebsan/./src/components/vue/CalendariumFeast.vue","webpack://hebsan/./src/views/ABCFeasts.vue?df60","webpack://hebsan/./src/views/ABCFeasts.vue"],"sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", { class: \"smallScreen\" }, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")!\n  const _component_router_link = _resolveComponent(\"router-link\")!\n  const _component_ion_row = _resolveComponent(\"ion-row\")!\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")!\n\n  return (_openBlock(), _createBlock(_component_ion_grid, null, {\n    default: _withCtx(() => [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.calendarFrom, (thisFeast, index) => {\n        return (_openBlock(), _createBlock(_component_ion_row, { key: index }, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_col, {\n              \"size-lg\": \"2\",\n              \"size-md\": \"3\",\n              \"size-sm\": \"4\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(thisFeast.thisDateWeekDay), 1)\n              ]),\n              _: 2\n            }, 1024),\n            _createVNode(_component_ion_col, {\n              \"size-lg\": \"2\",\n              \"size-md\": \"3\",\n              \"size-sm\": \"4\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(thisFeast.thisDateFormat), 1)\n              ]),\n              _: 2\n            }, 1024),\n            _createVNode(_component_ion_col, {\n              \"size-lg\": \"5\",\n              \"size-md\": \"9\",\n              \"size-sm\": \"8\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_router_link, {\n                  to: {\r\n              name: 'PiecesForAFeast',\r\n              params: {\r\n                feastIndex: thisFeast.thisFeastIndex,\r\n                feast: thisFeast.thisFeast,\r\n                feastDate: thisFeast.thisDateFormat,\r\n                feastAnnoABC: thisFeast.thisAnnoABC,\r\n              },\r\n            }\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(thisFeast.thisFeast) + \" \", 1),\n                    _hoisted_1,\n                    _createElementVNode(\"strong\", null, _toDisplayString(thisFeast.thisAnnoABCDisplay), 1)\n                  ]),\n                  _: 2\n                }, 1032, [\"to\"])\n              ]),\n              _: 2\n            }, 1024)\n          ]),\n          _: 2\n        }, 1024))\n      }), 128))\n    ]),\n    _: 1\n  }))\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * const result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import addDays from \"../addDays/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextDay\n * @category Weekday Helpers\n * @summary When is the next day of the week?\n *\n * @description\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {Day} day - day of the week\n * @returns {Date} - the date is the next day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the next Monday after Mar, 20, 2020?\n * const result = nextDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 23 2020 00:00:00\n *\n * @example\n * // When is the next Tuesday after Mar, 21, 2020?\n * const result = nextDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 24 2020 00:00:00\n */\n\nexport default function nextDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = day - getDay(date);\n  if (delta <= 0) delta += 7;\n  return addDays(date, delta);\n}","import nextDay from \"../nextDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextSunday\n * @category Weekday Helpers\n * @summary When is the next Sunday?\n *\n * @description\n * When is the next Sunday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Sunday after Mar, 22, 2020?\n * const result = nextSunday(new Date(2020, 2, 22))\n * //=> Sun Mar 29 2020 00:00:00\n */\n\nexport default function nextSunday(date) {\n  requiredArgs(1, arguments);\n  return nextDay(date, 0);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * const result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import format from \"date-fns/format\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport getDay from \"date-fns/getDay\";\r\nimport addWeeks from \"date-fns/addWeeks\";\r\nimport nextSunday from \"date-fns/nextSunday\";\r\nimport compareDesc from \"date-fns/compareDesc\";\r\nimport useTranslate from \"./translateService\";\r\n\r\nexport default function (thisDay: Date) {\r\n  let lang = \"fr\";\r\n  const language = localStorage.getItem(\"lang\");\r\n  if (language) {\r\n    lang = language;\r\n  }\r\n  //   () is Now ; (2022, 11, 23) is 23/12/2022 !!!!\r\n  thisDay = addDays(thisDay, -1); // we keep the feast until the next day.\r\n  // Anyway problem with date() when on the day of the feast\r\n  const civilYear = getYear(thisDay);\r\n  const toDay = new Date();\r\n  const lastDate = addDays(toDay, 1102); // 3 years + 1 week after today\r\n  let annoMod = civilYear % 3;\r\n  const annoArray = [\"C\", \"A\", \"B\"];\r\n  const annoABC = annoArray[annoMod];\r\n  annoMod = (civilYear + 1) % 3;\r\n  const annoABCPlus1 = annoArray[annoMod]; // liturgical anno from Advent\r\n  let i = 0;\r\n  let j = 0;\r\n  let feastIndex = \"\";\r\n  let indexPerAnnum = 0;\r\n  let originalString = \"\";\r\n  let incrementDate = new Date(civilYear, 0, 1);\r\n  let arrayFeasts = [];\r\n  const calendarArray = [\r\n    {\r\n      calendarFeast: \"\",\r\n      calendarDate: new Date(civilYear - 1, 11, 31),\r\n      calendarABC: \"\",\r\n    },\r\n  ];\r\n  const calendarFrom = [\r\n    {\r\n      thisFeast: \"\",\r\n      thisFeastIndex: \"\",\r\n      thisDateWeekDay: \"\",\r\n      thisDateFormat: \"\",\r\n      thisAnnoABC: \"\",\r\n      thisAnnoABCDisplay: \"\",\r\n    },\r\n  ];\r\n  class CalendarItem {\r\n    calendarFeast: string;\r\n    calendarDate: Date;\r\n    calendarABC: string;\r\n    constructor(\r\n      calendarFeast: string,\r\n      calendarDate: Date,\r\n      calendarABC: string\r\n    ) {\r\n      this.calendarFeast = calendarFeast;\r\n      this.calendarDate = calendarDate;\r\n      this.calendarABC = calendarABC;\r\n    }\r\n  }\r\n  const pushItem = function (obj: {\r\n    calendarFeast: string;\r\n    calendarDate: Date;\r\n    calendarABC: string;\r\n  }) {\r\n    calendarArray.push(obj);\r\n  };\r\n  const dateWeekDay = function (obj: {\r\n    calendarFeast: string;\r\n    calendarDate: Date;\r\n    calendarABC: string;\r\n  }) {\r\n    const daysTR = [\r\n      useTranslate(\"sunday\", lang),\r\n      useTranslate(\"monday\", lang),\r\n      useTranslate(\"tuesday\", lang),\r\n      useTranslate(\"wednesday\", lang),\r\n      useTranslate(\"thursday\", lang),\r\n      useTranslate(\"friday\", lang),\r\n      useTranslate(\"saturday\", lang),\r\n    ];\r\n    return (\r\n      daysTR[obj.calendarDate.getDay()] \r\n    );\r\n  };\r\n  const dateFormat = function (obj: {\r\n    calendarFeast: string;\r\n    calendarDate: Date;\r\n    calendarABC: string;\r\n  }) {\r\n    return (\r\n      format(obj.calendarDate, \"dd/MM/yyyy\")\r\n    );\r\n  };\r\n  const removeSpaces = function (myString: string): string {\r\n    const existSpace = myString.includes(\" \"); \r\n    // The includes() method determines whether a string contains the specified characters.\r\n    // Returns true if the string contains the characters, and false if not.\r\n    if (existSpace) {\r\n      // the string has space(s)\r\n      return removeSpaces(myString.replace(\" \", \"\")); // function invokes itself\r\n    } else {\r\n      return myString;\r\n    }\r\n  };\r\n  // Easter: source: http://www.irt.org/articles/js052/\r\n  const century = Math.floor(civilYear / 100);\r\n  const N = civilYear - 19 * Math.floor(civilYear / 19);\r\n  const K = Math.floor((century - 17) / 25);\r\n  let I =\r\n    century -\r\n    Math.floor(century / 4) -\r\n    Math.floor((century - K) / 3) +\r\n    19 * N +\r\n    15;\r\n  I = I - 30 * Math.floor(I / 30);\r\n  I =\r\n    I -\r\n    Math.floor(I / 28) *\r\n      (1 -\r\n        Math.floor(I / 28) *\r\n          Math.floor(29 / (I + 1)) *\r\n          Math.floor((21 - N) / 11));\r\n  let J =\r\n    civilYear +\r\n    Math.floor(civilYear / 4) +\r\n    I +\r\n    2 -\r\n    century +\r\n    Math.floor(century / 4);\r\n  J = J - 7 * Math.floor(J / 7);\r\n  const L = I - J;\r\n  const month = 3 + Math.floor((L + 40) / 44);\r\n  const day = L + 28 - 31 * Math.floor(month / 4);\r\n  const easter = new Date(civilYear, month - 1, day);\r\n  const beforeAsh = addDays(easter, -49);\r\n  const christmas = new Date(civilYear, 11, 25);\r\n  const weeks = getDay(christmas) == 0 ? 6 : 5; // if Christmas is a Sunday, we need to go back one week further\r\n  let xRex = addWeeks(christmas, -weeks);\r\n  xRex = nextSunday(xRex);\r\n  // 1 if first date < second ; 0 if dates are equal ; else -1\r\n  let calendarObj = new CalendarItem(\r\n    \"\",\r\n    new Date(civilYear - 1, 11, 31),\r\n    annoABC\r\n  ); // intialize the calendar with a first record\r\n  pushItem(calendarObj);\r\n  if (getDay(new Date(civilYear, 0, 1)) == 0) {\r\n    // if 1st January is a Sunday, feast is Dei genitricis Maria\r\n    calendarObj = new CalendarItem(\r\n      \"Dei genitricis Maria\",\r\n      new Date(civilYear, 0, 1),\r\n      annoABC\r\n    );\r\n    pushItem(calendarObj);\r\n  }\r\n  const epiphany = nextSunday(new Date(civilYear, 0, 1)); // Epiphany is celebrated Sunday between Jan 2 & 8\r\n  calendarObj = new CalendarItem(\"Epiphania Domini\", epiphany, annoABC);\r\n  pushItem(calendarObj);\r\n  const baptism = addWeeks(epiphany, 1);\r\n  calendarObj = new CalendarItem(\"Baptismate Domini\", baptism, annoABC);\r\n  pushItem(calendarObj);\r\n  i = 2;\r\n  do {\r\n    incrementDate = addWeeks(baptism, i - 1);\r\n    calendarObj = new CalendarItem(\r\n      \"Tempus Per Annum \" + i,\r\n      incrementDate,\r\n      annoABC\r\n    );\r\n    pushItem(calendarObj);\r\n    i++;\r\n  } while (compareDesc(incrementDate, beforeAsh) > 0);\r\n  indexPerAnnum = i + 4;\r\n  i = 1;\r\n  do {\r\n    incrementDate = addWeeks(beforeAsh, i);\r\n    calendarObj = new CalendarItem(\r\n      \"Tempus Quadragesimae \" + i,\r\n      incrementDate,\r\n      annoABC\r\n    );\r\n    pushItem(calendarObj);\r\n    i++;\r\n  } while (compareDesc(incrementDate, addWeeks(easter, -2)) > 0);\r\n  calendarObj = new CalendarItem(\r\n    \"Dominica In Palmis\",\r\n    addWeeks(easter, -1),\r\n    annoABC\r\n  );\r\n  pushItem(calendarObj);\r\n  calendarObj = new CalendarItem(\r\n    \"Ad Vigiliam Paschalem   \",\r\n    addDays(easter, -1),\r\n    annoABC\r\n  );\r\n  pushItem(calendarObj);\r\n  calendarObj = new CalendarItem(\"Resurrectio Domini\", easter, annoABC);\r\n  pushItem(calendarObj);\r\n  for (i = 1; i < 6; i++) {\r\n    incrementDate = addWeeks(easter, i);\r\n    calendarObj = new CalendarItem(\r\n      \"Tempus Paschale \" + (i + 1),\r\n      incrementDate,\r\n      annoABC\r\n    );\r\n    pushItem(calendarObj);\r\n  }\r\n  incrementDate = addWeeks(easter, i);\r\n  calendarObj = new CalendarItem(\r\n    \"Ascensio Domini\",\r\n    addDays(easter, 39),\r\n    annoABC\r\n  );\r\n  pushItem(calendarObj);\r\n  arrayFeasts = [\r\n    \"Tempus Paschale 7\",\r\n    \"In Festo Pentecostes\",\r\n    \"Sanctissimae Trinitatis\",\r\n    \"Corporis Et Sanguinis Christi\",\r\n  ];\r\n  for (i = 0; i < 4; i++) {\r\n    incrementDate = addWeeks(easter, 6 + i);\r\n    calendarObj = new CalendarItem(arrayFeasts[i], incrementDate, annoABC);\r\n    pushItem(calendarObj);\r\n  }\r\n  i = 0;\r\n  do {\r\n    incrementDate = addWeeks(easter, i + 10);\r\n    calendarObj = new CalendarItem(\r\n      \"Tempus Per Annum \" + indexPerAnnum,\r\n      incrementDate,\r\n      annoABC\r\n    );\r\n    pushItem(calendarObj);\r\n    i++;\r\n    indexPerAnnum++;\r\n  } while (compareDesc(incrementDate, addWeeks(xRex, -1)) > 0);\r\n  calendarObj = new CalendarItem(\"Christus rex\", xRex, annoABC);\r\n  pushItem(calendarObj);\r\n  for (i = 1; i < 5; i++) {\r\n    incrementDate = addWeeks(xRex, i);\r\n    calendarObj = new CalendarItem(\r\n      \"Tempus Adventus \" + i,\r\n      incrementDate,\r\n      annoABCPlus1\r\n    );\r\n    pushItem(calendarObj);\r\n  }\r\n  calendarObj = new CalendarItem(\r\n    \"In Nativitate Domini\",\r\n    christmas,\r\n    annoABCPlus1\r\n  );\r\n  pushItem(calendarObj);\r\n  if (getDay(christmas) > 0) {\r\n    calendarObj = new CalendarItem(\r\n      \"Sanctae Familiae\",\r\n      nextSunday(christmas),\r\n      annoABCPlus1\r\n    );\r\n    pushItem(calendarObj);\r\n  }\r\n  const assumptio = new Date(civilYear, 7, 15);\r\n  const sanctorum = new Date(civilYear, 10, 1);\r\n  if (getDay(assumptio) == 0 || getDay(sanctorum) == 0) {\r\n    for (const thisItem of calendarArray) {\r\n      if (compareDesc(thisItem.calendarDate, assumptio) == 0) {\r\n        thisItem.calendarFeast = \"Beatae Mariae Virginis Assumptio\";\r\n      }\r\n      if (compareDesc(thisItem.calendarDate, sanctorum) == 0) {\r\n        thisItem.calendarFeast = \"Omnium Sanctorum\";\r\n      }\r\n    }\r\n  }\r\n  if (getDay(assumptio) > 0) {\r\n    calendarObj = new CalendarItem(\r\n      \"Beatae Mariae Virginis Assumptio\",\r\n      assumptio,\r\n      annoABC\r\n    );\r\n    pushItem(calendarObj);\r\n  }\r\n  if (getDay(sanctorum) > 0) {\r\n    calendarObj = new CalendarItem(\"Omnium Sanctorum\", sanctorum, annoABC);\r\n    pushItem(calendarObj);\r\n  }\r\n  const praesentatio = new Date(civilYear, 1, 2); // fêtes de précepte\r\n  const iosephSponsus = new Date(civilYear, 2, 19);\r\n  const petriPauli = new Date(civilYear, 5, 29);\r\n  const bmConceptio = new Date(civilYear, 11, 8);\r\n  if (\r\n    getDay(praesentatio) == 0 ||\r\n    getDay(iosephSponsus) == 0 ||\r\n    getDay(petriPauli) == 0 ||\r\n    getDay(bmConceptio) == 0\r\n  ) {\r\n    for (const thisItem2 of calendarArray) {\r\n      if (compareDesc(thisItem2.calendarDate, praesentatio) == 0) {\r\n        thisItem2.calendarFeast = \"Praesentatio Domini\";\r\n      }\r\n      if (compareDesc(thisItem2.calendarDate, iosephSponsus) == 0) {\r\n        thisItem2.calendarFeast = \"Ioseph Sponsus\";\r\n      }\r\n      if (compareDesc(thisItem2.calendarDate, petriPauli) == 0) {\r\n        thisItem2.calendarFeast = \"Petri Et Pauli\";\r\n      }\r\n      if (compareDesc(thisItem2.calendarDate, bmConceptio) == 0) {\r\n        thisItem2.calendarFeast = \"Beatae Mariae Virginis Conceptio\";\r\n      }\r\n    }\r\n  }\r\n  const calendarArraySorted = calendarArray.sort( // see https://www.cloudhadoop.com/typescript-sort-object-array/\r\n    (first, second) => 0 - (first.calendarDate > second.calendarDate ? -1 : 1)\r\n  );\r\n  let k = 0;\r\n  let AnnoABCPrev = annoABC + \"1\"; // anything but not blank\r\n  let AnnoABCDisplay = \"\";\r\n  for (j = 1; j < calendarArraySorted.length; j++) {\r\n    /*             Compare the two dates and return -1 if the first date is after the second,. \r\n            Examples: compareDesc returns 0 if the given dates are equal, \r\n            compareDesc returns 1 if the first date is before the second */\r\n    if (compareDesc(thisDay, calendarArraySorted[j].calendarDate) > -1) {\r\n      if (compareDesc(calendarArraySorted[j].calendarDate, lastDate) > 0) {\r\n        originalString = calendarArraySorted[j].calendarFeast;\r\n        feastIndex = removeSpaces(originalString);\r\n        if (calendarArraySorted[j].calendarABC == AnnoABCPrev) {\r\n          AnnoABCDisplay = \"\";\r\n        } else {\r\n          AnnoABCDisplay = \" - Anno \" + calendarArraySorted[j].calendarABC;\r\n          AnnoABCPrev = calendarArraySorted[j].calendarABC;\r\n        }\r\n        calendarFrom[k] = {\r\n          thisFeast: calendarArraySorted[j].calendarFeast,\r\n          thisFeastIndex: feastIndex,\r\n          thisDateWeekDay: dateWeekDay(calendarArraySorted[j]),\r\n          thisDateFormat: dateFormat(calendarArraySorted[j]),\r\n          thisAnnoABC: calendarArraySorted[j].calendarABC,\r\n          thisAnnoABCDisplay: AnnoABCDisplay,\r\n        };\r\n        k++;\r\n      }\r\n    }\r\n  }\r\n  return { calendarFrom};\r\n}\r\n","\r\nimport { IonGrid, IonRow, IonCol } from \"@ionic/vue\";\r\nimport { defineComponent } from \"vue\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport getMonth from \"date-fns/getMonth\";\r\nimport getDate from \"date-fns/getDate\";\r\nimport useCalendarService from \"../ts/calendarService\";\r\nexport default defineComponent({\r\n  name: \"CalendariumFeast\",\r\n  components: { IonGrid, IonRow, IonCol },\r\n  props: {\r\n    startyear: { type: Number, default: getYear(new Date()) },\r\n    startmonth: { type: Number, default: getMonth(new Date()) },\r\n    startday: { type: Number, default: getDate(new Date()) },\r\n  },\r\n  setup(props) {\r\n    const actualDate = new Date(props.startyear, props.startmonth, props.startday); //   () is Now ; (2022, 11, 23) is 23/12/2022 !!!!\r\n    const { calendarFrom } = useCalendarService(actualDate);\r\n    return { calendarFrom };\r\n  },\r\n});\r\n","import { render } from \"./CalendariumFeast.vue?vue&type=template&id=308d2dad&ts=true\"\nimport script from \"./CalendariumFeast.vue?vue&type=script&lang=ts\"\nexport * from \"./CalendariumFeast.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\geral\\\\Dropbox\\\\ionic\\\\hebsan\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"container\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, [\n  /*#__PURE__*/_createTextVNode(\" Calendarium Romanum \"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\" ex Decreto Sacrosancti Oecumenici\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\" Concilii Vaticani II instauratum \")\n], -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" \")\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\" \")\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"  \")\n\nimport { home } from \"ionicons/icons\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport CalendariumFeast from \"@/components/vue/CalendariumFeast.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\r\nconst today = new Date(); //   () is Now ; (2022, 11, 23) is 23/12/2022 !!!!\r\nconst civilYearPlus1 = getYear(today) + 1;\r\nconst civilYearPlus2 = civilYearPlus1 + 1;\r\nconst civilYearPlus3 = civilYearPlus2 + 1;\r\nconst firstMonth = 0;\r\nconst firstDay = 2;\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_ion_icon = _resolveComponent(\"ion-icon\")!\n  const _component_ion_button = _resolveComponent(\"ion-button\")!\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")!\n  const _component_ion_header = _resolveComponent(\"ion-header\")!\n  const _component_ion_content = _resolveComponent(\"ion-content\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_header, { class: \"ion-no-border\" }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_toolbar, null, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_button, {\n                shape: \"round\",\n                size: \"small\",\n                strong: \"\",\n                href: \"/\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_icon, { icon: _unref(home) }, null, 8, [\"icon\"])\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_ion_content, null, {\n        default: _withCtx(() => [\n          _createElementVNode(\"div\", _hoisted_1, [\n            _hoisted_2,\n            _hoisted_3,\n            _hoisted_4,\n            _createVNode(CalendariumFeast),\n            _createVNode(CalendariumFeast, {\n              startyear: civilYearPlus1,\n              startmonth: firstMonth,\n              startday: firstDay\n            }),\n            _createVNode(CalendariumFeast, {\n              startyear: civilYearPlus2,\n              startmonth: firstMonth,\n              startday: firstDay\n            }),\n            _createVNode(CalendariumFeast, {\n              startyear: civilYearPlus3,\n              startmonth: firstMonth,\n              startday: firstDay\n            }),\n            _hoisted_5,\n            _hoisted_6,\n            _hoisted_7,\n            _hoisted_8,\n            _hoisted_9,\n            _hoisted_10\n          ])\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./ABCFeasts.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ABCFeasts.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","getYear","dirtyDate","getFullYear","_hoisted_1","_createElementVNode","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_ion_col","_resolveComponent","_component_router_link","_component_ion_row","_component_ion_grid","_openBlock","_createBlock","default","_withCtx","_createElementBlock","_Fragment","_renderList","calendarFrom","thisFeast","index","key","_createVNode","_createTextVNode","_toDisplayString","thisDateWeekDay","_","thisDateFormat","to","name","params","feastIndex","thisFeastIndex","feast","feastDate","feastAnnoABC","thisAnnoABC","thisAnnoABCDisplay","getMonth","date","month","getDate","dayOfMonth","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","isDate","isValid","isNaN","Number","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","options","result","tokenValue","replace","addSuffix","comparison","buildFormatLongFn","undefined","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","era","quarter","day","dayPeriod","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","findIndex","pattern","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","buildMatchPatternFn","parseResult","parsePattern","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","locale","code","weekStartsOn","firstWeekContainsDate","toInteger","Math","ceil","floor","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","MILLISECONDS_IN_DAY","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","difference","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","getUTCDate","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","round","startOfUTCWeek","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","addLeadingZeros","targetLength","sign","output","abs","formatters","y","signedYear","M","getUTCMonth","d","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","hours","toLowerCase","b","B","K","k","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","dateTimeFormat","datePattern","timePattern","longFormatters","p","P","getTimezoneOffsetInMilliseconds","utcDate","UTC","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","addDays","setDate","getDay","addWeeks","days","nextDay","delta","nextSunday","compareDesc","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","thisDay","lang","language","localStorage","getItem","civilYear","toDay","lastDate","annoMod","annoArray","annoABC","annoABCPlus1","j","indexPerAnnum","originalString","incrementDate","arrayFeasts","calendarArray","calendarFeast","calendarDate","calendarABC","CalendarItem","constructor","this","pushItem","push","dateWeekDay","daysTR","useTranslate","dateFormat","removeSpaces","myString","existSpace","includes","century","N","J","easter","beforeAsh","christmas","weeks","xRex","calendarObj","epiphany","baptism","assumptio","sanctorum","thisItem","praesentatio","iosephSponsus","petriPauli","bmConceptio","thisItem2","calendarArraySorted","sort","first","second","AnnoABCPrev","AnnoABCDisplay","defineComponent","components","IonGrid","IonRow","IonCol","props","startyear","type","startmonth","startday","setup","actualDate","useCalendarService","__exports__","id","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_defineComponent","__props","civilYearPlus1","civilYearPlus2","civilYearPlus3","firstMonth","firstDay","_component_ion_icon","_component_ion_button","_component_ion_toolbar","_component_ion_header","_component_ion_content","_component_ion_page","shape","size","strong","href","icon","_unref","home","CalendariumFeast"],"sourceRoot":""}